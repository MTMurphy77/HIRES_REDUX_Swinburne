#!/bin/bash -f
#------------------------------------------------------------------------------
# Script to return SVN version of the idlutils product.
# Don't forget to run:
#   svn propset svn:keywords HeadURL idlutils_version
#   svn ci -m "setting keywords property to HeadURL" idlutils_version
# once you have added this to your new SVN product
# Written by C. Loomis, Princeton
#------------------------------------------------------------------------------

# The trailing part of this executable's filename, with respect to the product root.
MYNAME='bin/idlutils_version'

# The following line will include a URL name after the colon
# for any SVN version.
svnURL='$HeadURL$'

# Special case the trunk, which we want to recognize as a version named "trunk" 
svnTag=$(echo "$svnURL" | sed 's,^$HeadURL: .*/trunk/,trunk/,; s, \$$,,' | sed "s,/$MYNAME,,")
if test "$svnTag" = "trunk"; then
    echo "trunk"
    exit 0
fi

# Check whether we are exported. This test is not strictly necessary, but I think 
# it is incredibly bad form to UPS tag checked-out (and not exported) code.
svnVersion=`svnversion $IDLUTILS_DIR`
if test "$svnVersion" != "exported"; then
    echo "NOTAG: $svnVersion"
    exit 1
fi

# Strip off the expected starting goo, and our filename at the end.
# If it doesn't look like a tag, complain
svnTag=$(echo "$svnURL" | sed 's,^$HeadURL: .*/trunk/,trunk/,; s, \$$,,' | sed "s,/$MYNAME,,")
if test "$svnTag" = "trunk"; then
    echo "trunk"
    exit 0
fi

svnTag=$(echo "$svnURL" | sed 's,^$HeadURL: .*/tags/,,; s, \$$,,' | sed "s,/$MYNAME,,")
if test -z "$svnTag" || $(echo "$svnTag" | grep -s -q '/') ; then 
    # Noisy failure:
    # echo "NOTAG: unparseable $svnURL"
    # Quiet failure:
    echo "NOTAG: unparseable"
    exit 1
fi

echo $svnTag
exit 0

